USE ECOMMERCE;
SELECT TOP 100 * FROM TRANSACTION_PRACTICE_DUMMY;

WITH PURCHASE_FREQ AS (
						SELECT C.CUST_ID
							, AVG(C.DAY_DIFF_FROM_LASTORDER) AS PURCHASE_FREQ
							, CASE 
									WHEN AVG(C.DAY_DIFF_FROM_LASTORDER) IN (0,1) THEN 'NOT SURE'
									WHEN AVG(C.DAY_DIFF_FROM_LASTORDER) BETWEEN 2 AND 10 THEN 'FREQUENT PURCHASER'
									WHEN AVG(C.DAY_DIFF_FROM_LASTORDER) BETWEEN 11 AND 30 THEN 'REGULAR CUSTOMER'
									WHEN AVG(C.DAY_DIFF_FROM_LASTORDER) > 30 AND AVG(C.DAY_DIFF_FROM_LASTORDER) < 60 THEN 'IRREGULAR CUSTOMER'
									ELSE 'NO PATTERN'
									END AS CUSTOMER_PURCHASE_PATTERN 
							FROM (

								SELECT B.CUST_ID
										, B.ORDER_DATETIME
										, B.LAST_DATE
										, DATEDIFF(DAY, B.ORDER_DATETIME, B.LAST_DATE) AS DAY_DIFF_FROM_LASTORDER
										FROM (

												SELECT A.CUST_ID
														, A.ORDER_DATETIME
														, LAG(A.ORDER_DATETIME,1) OVER (PARTITION BY A.CUST_ID ORDER BY A.ORDER_DATETIME DESC) AS LAST_DATE
														FROM (

																SELECT AMPERITY_ID AS CUST_ID
																		, ORDER_DATETIME
																		FROM TRANSACTION_PRACTICE_DUMMY
																		WHERE 
																		IS_RETURN=0
																		AND IS_CANCELLATION=0
																		--ORDER BY ORDER_DATETIME DESC
															) A 

											) B 

										) C
							WHERE DAY_DIFF_FROM_LASTORDER IS NOT NULL
							GROUP BY C.CUST_ID
), 

CNT_TRANS AS (
				SELECT A.CUST_ID
						, (A.TOTAL_STORE_PURCHASE + A.TOTAL_ONLINE_PURCAHSE) AS TOTAL_PURCHASES
						FROM (
								SELECT AMPERITY_ID AS CUST_ID
										, COUNT(FK_STORE_TXN) TOTAL_STORE_PURCHASE
										, COUNT(FK_WEB_TXN) TOTAL_ONLINE_PURCAHSE
										FROM TRANSACTION_PRACTICE_DUMMY 
										WHERE 
										IS_RETURN=0
										AND IS_CANCELLATION=0 
										GROUP BY AMPERITY_ID
						     ) A
), 
-- SELECT AMPERITY_ID, FK_STORE_TXN, FK_WEB_TXN 
-- FROM TRANSACTION_PRACTICE_DUMMY
-- WHERE AMPERITY_ID='e5f64006-15ce-3ed9-8bb3-caa9f059235e';
RECENCY AS (

	--SELECT MIN(LAST_PURCHASED), MAX(LAST_PURCHASED) FROM (
			 SELECT CUST_ID 
			 		, ABS (DATEDIFF (DAY, GETDATE(), ORDER_DATETIME)) AS LAST_PURCHASED
			 FROM (
					SELECT AMPERITY_ID CUST_ID
							, ORDER_DATETIME 
							, ROW_NUMBER() OVER (PARTITION BY AMPERITY_ID ORDER BY ORDER_DATETIME DESC) LATEST_PURCHASE_DATE
							FROM TRANSACTION_PRACTICE_DUMMY
			 ) B
			 WHERE LATEST_PURCHASE_DATE = 1
	--) C
), 

MONETORY AS ( 
				SELECT AMPERITY_ID AS CUST_ID
						, ROUND(SUM(ITEM_COST), 2) AS REVENUE_GENERATED
						FROM TRANSACTION_PRACTICE_DUMMY
						WHERE 
						IS_RETURN=0
						AND IS_CANCELLATION=0 
						GROUP BY AMPERITY_ID
)

SELECT C.CUST_ID
		, C.TOTAL_PURCHASES
		, F.PURCHASE_FREQ
		, F.CUSTOMER_PURCHASE_PATTERN
		, R.LAST_PURCHASED
		, M.REVENUE_GENERATED

		FROM CNT_TRANS C
		LEFT JOIN PURCHASE_FREQ F
		ON C.CUST_ID=F.CUST_ID

		LEFT JOIN RECENCY R
		ON C.CUST_ID=R.CUST_ID

		LEFT JOIN MONETORY M 
		ON C.CUST_ID=M.CUST_ID
;
